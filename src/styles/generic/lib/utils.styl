-apply(fn, args)
  $nargs = length(args)
  if $nargs == 0
    return fn()
  else if $nargs == 1
    return fn(args[0])
  else if $nargs == 2
    return fn(args[0], args[1])
  else if $nargs == 3
    return fn(args[0], args[1], args[2])
  else if $nargs == 4
    return fn(args[0], args[1], args[2], args[3])
  else if $nargs == 5
    return fn(args[0], args[1], args[2], args[3], args[4])
  else
    $erroring-fn = s(called-from[0]) == '-call' ? '-call' : '-apply'
    error('You cannot use ' + $erroring-fn + '() with more than 5 arguments')

-call(fn, args...)
  -apply(fn, args)

/* Parsers */
-get-positional-value($val, $pos)
  len = length($val)
  if len == 1
    return $val[$pos[0]]
  else if len == 2
    return $val[$pos[1]]
  else if len == 3
    return $val[$pos[2]]
  else if len == 4
    return $val[$pos[3]]
  else
    error('Positional values must have a length between 1 and 4')

-top-value($val)
  $positions = 0, 0, 0, 0
  -get-positional-value($val, $positions)

-right-value($val)
  $positions = 0, 1, 1, 1
  -get-positional-value($val, $positions)

-bottom-value($val)
  $positions = 0, 0, 2, 2
  -get-positional-value($val, $positions)

-left-value($val)
  $positions = 0, 1, 1, 3
  -get-positional-value($val, $positions)

-shorten-positional-values($val)
  $top-val = -top-value($val)
  $right-val = -right-value($val)
  $bottom-val = -bottom-value($val)
  $left-val = -left-value($val)
  if $right-val == $left-val
    if $top-val == $bottom-val
      if $top-val == $right-val
        return $top-val
      else
        return $top-val $right-val
    else
      return $top-val $right-val $bottom-val
  else
    return $top-val $right-val $bottom-val $left-val


/* Numbers */
-round(n, precision = 0)
  multiplier = 10 ** precision
  math(n * multiplier, 'round') / multiplier

-double(n)
  return -round(n * 2)

-halve(n)
  return -round(n / 2)

when-interacting()
  &:hover
  &:active
  &:focus
    {block}